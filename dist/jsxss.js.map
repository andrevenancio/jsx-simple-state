{"version":3,"file":"jsxss.js","sources":["../src/emitter/index.js","../src/state/index.js","../src/consumer/index.js"],"sourcesContent":["import EventEmitter from 'events';\n\nexport const emitter = new EventEmitter();\n","import { emitter } from '../emitter';\n\nexport const State = new Proxy({}, {\n    get(target, name, receiver) {\n        if (!Reflect.has(target, name)) {\n            console.warn(`Trying to access unexistent prop \"${name}\".`);\n            return undefined;\n        }\n        return Reflect.get(target, name, receiver);\n    },\n    set(target, name, value, receiver) {\n        emitter.emit(name, { key: name, value });\n        return Reflect.set(target, name, value, receiver);\n    },\n});\n","import { React, PureComponent } from 'react';\n\nimport { State } from '../state';\nimport { emitter } from '../emitter';\n\nconst withConsumer = props => (WrappedComponent) => {\n    class Consumer extends PureComponent {\n        state = {};\n\n        componentDidMount() {\n            if (props && Array.isArray(props)) {\n                for (let i = 0; i < props.length; i++) {\n                    emitter.on(props[i], this.handleStateChange);\n                }\n            }\n        }\n\n        componentWillUnmount() {\n            if (props && Array.isArray(props)) {\n                for (let i = 0; i < props.length; i++) {\n                    emitter.off(props[i], this.handleStateChange);\n                }\n            }\n        }\n\n        handleStateChange = ({ key, value }) => {\n            this.setState({\n                [key]: value,\n            });\n        }\n\n        render() {\n            return (\n                <WrappedComponent {...this.props} {...this.state} />\n            );\n        }\n    }\n\n    return Consumer;\n};\n\nexport { withConsumer };\n"],"names":["emitter","EventEmitter","State","Proxy","get","target","name","receiver","Reflect","has","console","warn","set","value","emit","key","props","WrappedComponent","state","handleStateChange","ref","setState","componentDidMount","Array","isArray","let","i","length","on","this","componentWillUnmount","off","render","React","PureComponent"],"mappings":"gGAEaA,EAAU,IAAIC,ECAdC,EAAQ,IAAIC,MAAM,GAAI,CAC/BC,aAAIC,EAAQC,EAAMC,MACTC,QAAQC,IAAIJ,EAAQC,UAIlBE,QAAQJ,IAAIC,EAAQC,EAAMC,GAH7BG,QAAQC,0CAA0CL,SAK1DM,aAAIP,EAAQC,EAAMO,EAAON,UACrBP,EAAQc,KAAKR,EAAM,CAAES,IAAKT,QAAMO,IACzBL,QAAQI,IAAIP,EAAQC,EAAMO,EAAON,sECP3BS,mBAAUC,sHAEvBC,MAAQ,QAkBRC,2BAAqBC,WACZC,aAAS,wHAjBlBC,gCACQN,GAASO,MAAMC,QAAQR,OAClBS,IAAIC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC9B1B,EAAQ4B,GAAGZ,EAAMU,GAAIG,KAAKV,gCAKtCW,mCACQd,GAASO,MAAMC,QAAQR,OAClBS,IAAIC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC9B1B,EAAQ+B,IAAIf,EAAMU,GAAIG,KAAKV,gCAWvCa,yBAEQC,sBAAChB,mBAAqBY,KAAKb,MAAWa,KAAKX,YA3BhCgB"}